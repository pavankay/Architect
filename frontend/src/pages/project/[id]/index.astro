---
import Layout from '../../../layouts/Layout.astro';

const { id } = Astro.params;

// Fetch project details
let project = null;
try {
  const response = await fetch(`http://localhost:5000/projects/${id}`);
  project = response.ok ? await response.json() : null;
} catch (error) {
  console.error('Failed to fetch project:', error);
}

if (!project) {
  return Astro.redirect('/');
}
---

<Layout title={`${project.name} - Architect`}>
  <div class="flex h-screen">
    <!-- Sidebar -->
    <aside class="w-64 bg-black border-r border-white/10 p-6 flex flex-col">
      <a href="/" class="flex items-center gap-2 mb-8 hover:opacity-80 transition-opacity">
        <img src="/sitebuilder.png" alt="Architect Logo" class="h-8 w-8 object-contain" />
        <span class="font-mono text-sm">Architect</span>
      </a>
      
      <div class="mb-8">
        <h2 class="font-mono text-lg">{project.name}</h2>
      </div>
      
      <nav class="space-y-2 flex-1">
        <a href={`/project/${id}`} class="block px-4 py-2 font-mono text-sm bg-white/10 rounded-lg">
          Overview
        </a>
        <a href={`/project/${id}/sitemap`} class="block px-4 py-2 font-mono text-sm hover:bg-white/5 rounded-lg transition-colors">
          Site Map
        </a>
        <a href={`/project/${id}/architecture`} class="block px-4 py-2 font-mono text-sm hover:bg-white/5 rounded-lg transition-colors">
          Frontend
        </a>
        <a href={`/project/${id}/backend`} class="block px-4 py-2 font-mono text-sm hover:bg-white/5 rounded-lg transition-colors">
          Backend
        </a>
      </nav>
      
      <div class="mt-auto pt-8 space-y-4">
        <button 
          id="project-details-btn"
          class="w-full px-4 py-2 font-mono text-sm bg-white/10 hover:bg-white/20 rounded-lg transition-colors"
        >
          Project Details
        </button>
        
        <div class="border-t border-white/10 pt-4">
          <p class="font-mono text-xs opacity-60">Created</p>
          <p class="font-mono text-xs">{new Date(project.created_at).toLocaleDateString()}</p>
        </div>
      </div>
    </aside>
    
    <!-- Main Content -->
    <main class="flex-1 p-8 overflow-auto">
      <div class="max-w-4xl mx-auto">
        <h1 class="font-mono text-3xl mb-8">Project Overview</h1>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="p-6 bg-white/5 rounded-xl border border-white/10 hover:border-white/20 transition-colors">
            <h3 class="font-mono text-lg mb-2">Site Map</h3>
            <p class="font-mono text-sm opacity-60 mb-4">Interactive site structure</p>
            <a href={`/project/${id}/sitemap`} class="font-mono text-sm text-white hover:underline">
              View Site Map →
            </a>
          </div>
          
          <div class="p-6 bg-white/5 rounded-xl border border-white/10 hover:border-white/20 transition-colors">
            <h3 class="font-mono text-lg mb-2">Frontend</h3>
            <p class="font-mono text-sm opacity-60 mb-4">UI components and architecture</p>
            <a href={`/project/${id}/architecture`} class="font-mono text-sm text-white hover:underline">
              View Frontend →
            </a>
          </div>
          
          <div class="p-6 bg-white/5 rounded-xl border border-white/10 hover:border-white/20 transition-colors">
            <h3 class="font-mono text-lg mb-2">Backend</h3>
            <p class="font-mono text-sm opacity-60 mb-4">API and database design</p>
            <a href={`/project/${id}/backend`} class="font-mono text-sm text-white hover:underline">
              View Backend →
            </a>
          </div>
        </div>
      </div>
    </main>
  </div>
  
  <!-- Project Details Modal -->
  <div id="project-modal" class="fixed inset-0 bg-black/90 backdrop-blur-sm hidden z-50">
    <div class="flex items-center justify-center h-full p-8">
      <div class="bg-black border border-white/20 rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
        <!-- Modal Header -->
        <div class="border-b border-white/10 p-6">
          <div class="flex justify-between items-start">
            <div>
              <h2 class="font-mono text-2xl mb-2">{project.name}</h2>
              <p class="font-mono text-sm opacity-60">
                Created on {new Date(project.created_at).toLocaleDateString('en-US', {
                  weekday: 'long',
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </p>
            </div>
            <button 
              id="close-modal-btn"
              class="text-white/60 hover:text-white text-2xl font-mono leading-none"
            >
              ×
            </button>
          </div>
        </div>
        
        <!-- Modal Body -->
        <div class="p-6 overflow-y-auto max-h-[60vh]">
          <div class="space-y-6">
            <div>
              <h3 class="font-mono text-sm text-white/60 mb-3">Project Description</h3>
              <div class="font-mono text-sm leading-relaxed whitespace-pre-wrap">{project.description}</div>
            </div>
          </div>
        </div>
        
        <!-- Modal Footer -->
        <div class="border-t border-white/10 p-6">
          <div class="flex justify-between items-center">
            <p class="font-mono text-xs opacity-60">
              Project ID: <span class="opacity-100">{project.id}</span>
            </p>
            <button 
              id="delete-project-btn"
              data-project-id={id}
              class="px-6 py-2 font-mono text-sm bg-red-600/20 hover:bg-red-600/30 text-red-400 rounded-lg transition-colors"
            >
              Delete Project
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const deleteBtn = document.getElementById('delete-project-btn');
    const projectDetailsBtn = document.getElementById('project-details-btn');
    const projectModal = document.getElementById('project-modal');
    const closeModalBtn = document.getElementById('close-modal-btn');
    
    // Open modal
    projectDetailsBtn?.addEventListener('click', () => {
      projectModal?.classList.remove('hidden');
    });
    
    // Close modal
    closeModalBtn?.addEventListener('click', () => {
      projectModal?.classList.add('hidden');
    });
    
    // Close modal when clicking outside
    projectModal?.addEventListener('click', (e) => {
      if (e.target === projectModal) {
        projectModal.classList.add('hidden');
      }
    });
    
    // Delete project
    deleteBtn?.addEventListener('click', async (e) => {
      const projectId = (e.target as HTMLElement).dataset.projectId;
      
      if (confirm('Are you sure you want to delete this project? This action cannot be undone.')) {
        try {
          const response = await fetch(`http://localhost:5000/projects/${projectId}`, {
            method: 'DELETE',
          });
          
          if (response.ok) {
            window.location.href = '/';
          } else {
            console.error('Failed to delete project');
            alert('Failed to delete project. Please try again.');
          }
        } catch (error) {
          console.error('Error deleting project:', error);
          alert('Error deleting project. Please try again.');
        }
      }
    });
  });
</script>